// Code generated by MockGen. DO NOT EDIT.
// Source: ./infra/cloudinary.go

// Package mock_infra is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"

	uploader "github.com/cloudinary/cloudinary-go/v2/api/uploader"
	gomock "github.com/golang/mock/gomock"
)

// MockCloudinary is a mock of Cloudinary interface.
type MockCloudinary struct {
	ctrl     *gomock.Controller
	recorder *MockCloudinaryMockRecorder
}

// MockCloudinaryMockRecorder is the mock recorder for MockCloudinary.
type MockCloudinaryMockRecorder struct {
	mock *MockCloudinary
}

// NewMockCloudinary creates a new mock instance.
func NewMockCloudinary(ctrl *gomock.Controller) *MockCloudinary {
	mock := &MockCloudinary{ctrl: ctrl}
	mock.recorder = &MockCloudinaryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCloudinary) EXPECT() *MockCloudinaryMockRecorder {
	return m.recorder
}

// Upload mocks base method.
func (m *MockCloudinary) Upload(ctx context.Context, file interface{}, uploadParams uploader.UploadParams) (*uploader.UploadResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Upload", ctx, file, uploadParams)
	ret0, _ := ret[0].(*uploader.UploadResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Upload indicates an expected call of Upload.
func (mr *MockCloudinaryMockRecorder) Upload(ctx, file, uploadParams interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Upload", reflect.TypeOf((*MockCloudinary)(nil).Upload), ctx, file, uploadParams)
}
